
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vinicius centurion
 */
public class FiltroAppGUI extends javax.swing.JFrame {

    /**
     * Creates new form FiltroAppGUI
     */
    public FiltroAppGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cinzaBotao = new javax.swing.ButtonGroup();
        bandaBotao = new javax.swing.ButtonGroup();
        brilhoRGBBotao = new javax.swing.ButtonGroup();
        brilhoYIQBotao = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        filtroBANDA = new javax.swing.JPanel();
        aplicaBRGB = new javax.swing.JButton();
        jBVermelho = new javax.swing.JRadioButton();
        jBVerde = new javax.swing.JRadioButton();
        jBAzul = new javax.swing.JRadioButton();
        preBRGB = new javax.swing.JLabel();
        origBRGB = new javax.swing.JLabel();
        filtroTON = new javax.swing.JPanel();
        aplicaATB = new javax.swing.JButton();
        jRed = new javax.swing.JSpinner();
        jGreen = new javax.swing.JSpinner();
        jBlue = new javax.swing.JSpinner();
        jTomVermelho = new javax.swing.JLabel();
        jTomVerde = new javax.swing.JLabel();
        jTomAzul = new javax.swing.JLabel();
        preATB = new javax.swing.JLabel();
        origATB = new javax.swing.JLabel();
        filtroESCCINZA = new javax.swing.JPanel();
        aplicaECZ = new javax.swing.JButton();
        jCinzaMedia = new javax.swing.JRadioButton();
        jCinzaVermelho = new javax.swing.JRadioButton();
        jCinzaVerde = new javax.swing.JRadioButton();
        jCinzaAzul = new javax.swing.JRadioButton();
        preECZ = new javax.swing.JLabel();
        origECZ = new javax.swing.JLabel();
        filtroNEGATIVO = new javax.swing.JPanel();
        aplicaNGT = new javax.swing.JButton();
        preNGT = new javax.swing.JLabel();
        origNGT = new javax.swing.JLabel();
        filtroLIMIAR = new javax.swing.JPanel();
        aplicaBnW = new javax.swing.JButton();
        valorLimiar = new javax.swing.JSlider();
        mostraLimiar = new javax.swing.JTextField();
        preBnW = new javax.swing.JLabel();
        origBnW = new javax.swing.JLabel();
        filtroBRILHORGB = new javax.swing.JPanel();
        aplicaBrilhoRGB = new javax.swing.JButton();
        jAddRGB = new javax.swing.JRadioButton();
        jMultRGB = new javax.swing.JRadioButton();
        preBrilhoRGB = new javax.swing.JLabel();
        origBrilhoRGB = new javax.swing.JLabel();
        valorAddBrilho = new javax.swing.JSpinner();
        valorMultBrilho = new javax.swing.JSpinner();
        filtroBRILHOYIQ = new javax.swing.JPanel();
        aplicaBrilhoYIQ = new javax.swing.JButton();
        jAddYIQ = new javax.swing.JRadioButton();
        jMultYIQ = new javax.swing.JRadioButton();
        preBrilhoYIQ = new javax.swing.JLabel();
        origBrilhoYIQ = new javax.swing.JLabel();
        valorAddY = new javax.swing.JSpinner();
        valorMultY = new javax.swing.JSpinner();
        filtroNGTYIQ = new javax.swing.JPanel();
        aplicaNgtYIQ = new javax.swing.JButton();
        preNgtYIQ = new javax.swing.JLabel();
        origNgtYIQ = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 100));

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(805, 485));

        aplicaBRGB.setText("APLICAR");
        aplicaBRGB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicaBRGBMouseClicked(evt);
            }
        });
        aplicaBRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaBRGBActionPerformed(evt);
            }
        });

        bandaBotao.add(jBVermelho);
        jBVermelho.setText("VERMELHO");
        jBVermelho.setActionCommand("R");
        jBVermelho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bandaBotao.add(jBVerde);
        jBVerde.setText("VERDE");
        jBVerde.setActionCommand("G");
        jBVerde.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jBVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerdeActionPerformed(evt);
            }
        });

        bandaBotao.add(jBAzul);
        jBAzul.setText("AZUL");
        jBAzul.setActionCommand("B");
        jBAzul.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        preBRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preBRGB.setBorder(javax.swing.BorderFactory.createTitledBorder("f\niltro aplicado"));
        preBRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origBRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origBRGB.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origBRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout filtroBANDALayout = new javax.swing.GroupLayout(filtroBANDA);
        filtroBANDA.setLayout(filtroBANDALayout);
        filtroBANDALayout.setHorizontalGroup(
            filtroBANDALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroBANDALayout.createSequentialGroup()
                .addGroup(filtroBANDALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(filtroBANDALayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(origBRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preBRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                    .addGroup(filtroBANDALayout.createSequentialGroup()
                        .addGap(20, 284, Short.MAX_VALUE)
                        .addComponent(jBVermelho)
                        .addGap(18, 18, 18)
                        .addComponent(jBVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(164, 164, 164)
                        .addComponent(aplicaBRGB)))
                .addContainerGap())
        );
        filtroBANDALayout.setVerticalGroup(
            filtroBANDALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroBANDALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroBANDALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preBRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(origBRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroBANDALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jBAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aplicaBRGB)
                    .addComponent(jBVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("BANDA", filtroBANDA);

        aplicaATB.setText("APLICAR");
        aplicaATB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaATBActionPerformed(evt);
            }
        });

        jRed.setModel(new javax.swing.SpinnerNumberModel(0, -255, 255, 1));

        jGreen.setModel(new javax.swing.SpinnerNumberModel(0, -255, 255, 1));

        jBlue.setModel(new javax.swing.SpinnerNumberModel(0, -255, 255, 1));

        jTomVermelho.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTomVermelho.setText("VERMELHO");
        jTomVermelho.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jTomVerde.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTomVerde.setText("VERDE");
        jTomVerde.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jTomAzul.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTomAzul.setText("AZUL");
        jTomAzul.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        preATB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preATB.setBorder(javax.swing.BorderFactory.createTitledBorder("filtro aplicado"));
        preATB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origATB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origATB.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origATB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout filtroTONLayout = new javax.swing.GroupLayout(filtroTON);
        filtroTON.setLayout(filtroTONLayout);
        filtroTONLayout.setHorizontalGroup(
            filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroTONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtroTONLayout.createSequentialGroup()
                        .addComponent(jTomVermelho, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRed, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTomVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTomAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(origATB, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addGroup(filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtroTONLayout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(aplicaATB))
                    .addGroup(filtroTONLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preATB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        filtroTONLayout.setVerticalGroup(
            filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroTONLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(origATB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(preATB, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filtroTONLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTomVermelho, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTomAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTomVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aplicaATB))
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("TONALIDADE", filtroTON);

        aplicaECZ.setText("APLICAR");
        aplicaECZ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicaECZMouseClicked(evt);
            }
        });
        aplicaECZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaECZActionPerformed(evt);
            }
        });

        cinzaBotao.add(jCinzaMedia);
        jCinzaMedia.setText("MÉDIA");
        jCinzaMedia.setActionCommand("M");
        jCinzaMedia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCinzaMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCinzaMediaActionPerformed(evt);
            }
        });

        cinzaBotao.add(jCinzaVermelho);
        jCinzaVermelho.setText("VERMELHO");
        jCinzaVermelho.setActionCommand("R");
        jCinzaVermelho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        cinzaBotao.add(jCinzaVerde);
        jCinzaVerde.setText("VERDE");
        jCinzaVerde.setActionCommand("G");
        jCinzaVerde.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCinzaVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCinzaVerdeActionPerformed(evt);
            }
        });

        cinzaBotao.add(jCinzaAzul);
        jCinzaAzul.setText("AZUL");
        jCinzaAzul.setActionCommand("B");
        jCinzaAzul.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        preECZ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preECZ.setBorder(javax.swing.BorderFactory.createTitledBorder("f\niltro aplicado"));
        preECZ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origECZ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origECZ.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origECZ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout filtroESCCINZALayout = new javax.swing.GroupLayout(filtroESCCINZA);
        filtroESCCINZA.setLayout(filtroESCCINZALayout);
        filtroESCCINZALayout.setHorizontalGroup(
            filtroESCCINZALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroESCCINZALayout.createSequentialGroup()
                .addGroup(filtroESCCINZALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(filtroESCCINZALayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(origECZ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(preECZ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(filtroESCCINZALayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jCinzaMedia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 207, Short.MAX_VALUE)
                        .addComponent(jCinzaVermelho)
                        .addGap(18, 18, 18)
                        .addComponent(jCinzaVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCinzaAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(164, 164, 164)
                        .addComponent(aplicaECZ)))
                .addContainerGap())
        );
        filtroESCCINZALayout.setVerticalGroup(
            filtroESCCINZALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroESCCINZALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroESCCINZALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preECZ, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(origECZ, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroESCCINZALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jCinzaAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aplicaECZ)
                    .addComponent(jCinzaVerde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCinzaVermelho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCinzaMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("ESCALA DE CINZA", filtroESCCINZA);

        aplicaNGT.setText("APLICAR");
        aplicaNGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaNGTActionPerformed(evt);
            }
        });

        preNGT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preNGT.setBorder(javax.swing.BorderFactory.createTitledBorder("filtro aplicado"));
        preNGT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origNGT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origNGT.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origNGT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout filtroNEGATIVOLayout = new javax.swing.GroupLayout(filtroNEGATIVO);
        filtroNEGATIVO.setLayout(filtroNEGATIVOLayout);
        filtroNEGATIVOLayout.setHorizontalGroup(
            filtroNEGATIVOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroNEGATIVOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(origNGT, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(filtroNEGATIVOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aplicaNGT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(preNGT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addContainerGap())
        );
        filtroNEGATIVOLayout.setVerticalGroup(
            filtroNEGATIVOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroNEGATIVOLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroNEGATIVOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preNGT, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(origNGT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(aplicaNGT)
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("NEGATIVO RGB", filtroNEGATIVO);

        aplicaBnW.setText("APLICAR");
        aplicaBnW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaBnWActionPerformed(evt);
            }
        });

        valorLimiar.setMajorTickSpacing(15);
        valorLimiar.setMaximum(255);
        valorLimiar.setMinorTickSpacing(1);
        valorLimiar.setPaintLabels(true);
        valorLimiar.setPaintTicks(true);
        valorLimiar.setValue(0);
        valorLimiar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                valorLimiarMouseDragged(evt);
            }
        });

        mostraLimiar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mostraLimiar.setText("0");

        preBnW.setBorder(javax.swing.BorderFactory.createTitledBorder("filtro aplicado"));

        origBnW.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));

        javax.swing.GroupLayout filtroLIMIARLayout = new javax.swing.GroupLayout(filtroLIMIAR);
        filtroLIMIAR.setLayout(filtroLIMIARLayout);
        filtroLIMIARLayout.setHorizontalGroup(
            filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroLIMIARLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtroLIMIARLayout.createSequentialGroup()
                        .addComponent(valorLimiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(mostraLimiar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(aplicaBnW))
                    .addGroup(filtroLIMIARLayout.createSequentialGroup()
                        .addComponent(origBnW, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(preBnW, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)))
                .addContainerGap())
        );
        filtroLIMIARLayout.setVerticalGroup(
            filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroLIMIARLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preBnW, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addComponent(origBnW, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtroLIMIARLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(valorLimiar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filtroLIMIARLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aplicaBnW)
                        .addComponent(mostraLimiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("LIMIARIZAÇÃO", filtroLIMIAR);

        aplicaBrilhoRGB.setText("APLICAR");
        aplicaBrilhoRGB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicaBrilhoRGBMouseClicked(evt);
            }
        });
        aplicaBrilhoRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaBrilhoRGBActionPerformed(evt);
            }
        });

        brilhoRGBBotao.add(jAddRGB);
        jAddRGB.setText("ADIÇÃO");
        jAddRGB.setActionCommand("R");
        jAddRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        brilhoRGBBotao.add(jMultRGB);
        jMultRGB.setText("MULTIPLICAÇÃO");
        jMultRGB.setActionCommand("G");
        jMultRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMultRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMultRGBActionPerformed(evt);
            }
        });

        preBrilhoRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preBrilhoRGB.setBorder(javax.swing.BorderFactory.createTitledBorder("f\niltro aplicado"));
        preBrilhoRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origBrilhoRGB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origBrilhoRGB.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origBrilhoRGB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        valorAddBrilho.setModel(new javax.swing.SpinnerNumberModel(0, -255, 255, 1));

        valorMultBrilho.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.00d, null, 0.01d));

        javax.swing.GroupLayout filtroBRILHORGBLayout = new javax.swing.GroupLayout(filtroBRILHORGB);
        filtroBRILHORGB.setLayout(filtroBRILHORGBLayout);
        filtroBRILHORGBLayout.setHorizontalGroup(
            filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroBRILHORGBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(origBrilhoRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(filtroBRILHORGBLayout.createSequentialGroup()
                        .addComponent(jAddRGB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(valorAddBrilho, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 253, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(filtroBRILHORGBLayout.createSequentialGroup()
                        .addComponent(jMultRGB)
                        .addGap(18, 18, 18)
                        .addComponent(valorMultBrilho, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aplicaBrilhoRGB))
                    .addComponent(preBrilhoRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        filtroBRILHORGBLayout.setVerticalGroup(
            filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroBRILHORGBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preBrilhoRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(origBrilhoRGB, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroBRILHORGBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(aplicaBrilhoRGB)
                    .addComponent(jMultRGB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAddRGB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valorAddBrilho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorMultBrilho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("BRILHO RGB", filtroBRILHORGB);

        aplicaBrilhoYIQ.setText("APLICAR");
        aplicaBrilhoYIQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicaBrilhoYIQMouseClicked(evt);
            }
        });
        aplicaBrilhoYIQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaBrilhoYIQActionPerformed(evt);
            }
        });

        brilhoYIQBotao.add(jAddYIQ);
        jAddYIQ.setText("ADIÇÃO");
        jAddYIQ.setActionCommand("R");
        jAddYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        brilhoYIQBotao.add(jMultYIQ);
        jMultYIQ.setText("MULTIPLICAÇÃO");
        jMultYIQ.setActionCommand("G");
        jMultYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMultYIQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMultYIQActionPerformed(evt);
            }
        });

        preBrilhoYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preBrilhoYIQ.setBorder(javax.swing.BorderFactory.createTitledBorder("f\niltro aplicado"));
        preBrilhoYIQ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origBrilhoYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origBrilhoYIQ.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origBrilhoYIQ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        valorAddY.setModel(new javax.swing.SpinnerNumberModel(0, -255, 255, 1));

        valorMultY.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.00d, null, 0.01d));

        javax.swing.GroupLayout filtroBRILHOYIQLayout = new javax.swing.GroupLayout(filtroBRILHOYIQ);
        filtroBRILHOYIQ.setLayout(filtroBRILHOYIQLayout);
        filtroBRILHOYIQLayout.setHorizontalGroup(
            filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroBRILHOYIQLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(origBrilhoYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(filtroBRILHOYIQLayout.createSequentialGroup()
                        .addComponent(jAddYIQ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(valorAddY, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 253, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(filtroBRILHOYIQLayout.createSequentialGroup()
                        .addComponent(jMultYIQ)
                        .addGap(18, 18, 18)
                        .addComponent(valorMultY, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aplicaBrilhoYIQ))
                    .addComponent(preBrilhoYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        filtroBRILHOYIQLayout.setVerticalGroup(
            filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroBRILHOYIQLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preBrilhoYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(origBrilhoYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroBRILHOYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(aplicaBrilhoYIQ)
                    .addComponent(jMultYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAddYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(valorAddY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorMultY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("BRILHO YIQ", filtroBRILHOYIQ);

        aplicaNgtYIQ.setText("APLICAR");
        aplicaNgtYIQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aplicaNgtYIQMouseClicked(evt);
            }
        });
        aplicaNgtYIQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicaNgtYIQActionPerformed(evt);
            }
        });

        preNgtYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        preNgtYIQ.setBorder(javax.swing.BorderFactory.createTitledBorder("f\niltro aplicado"));
        preNgtYIQ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        origNgtYIQ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origNgtYIQ.setBorder(javax.swing.BorderFactory.createTitledBorder("original"));
        origNgtYIQ.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout filtroNGTYIQLayout = new javax.swing.GroupLayout(filtroNGTYIQ);
        filtroNGTYIQ.setLayout(filtroNGTYIQLayout);
        filtroNGTYIQLayout.setHorizontalGroup(
            filtroNGTYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroNGTYIQLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(origNgtYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroNGTYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(aplicaNgtYIQ)
                    .addComponent(preNgtYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addContainerGap())
        );
        filtroNGTYIQLayout.setVerticalGroup(
            filtroNGTYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroNGTYIQLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroNGTYIQLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preNgtYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(origNgtYIQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aplicaNgtYIQ)
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("NEGATIVO YIQ", filtroNGTYIQ);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html><center>ATIVIDADE:<br>FILTROS DE IMAGENS RGB E YIQ</center></html>");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<html><center>Autoria<br>Vinicius B. C. Centurion<br><br>Trabalho apresentado ao prof. Douglas Andrade de Meneses<br>como requisito parcial a obtenção de nota na disciplina<br>de Processamento de Imagens, do Curso de Ciências da Computação<br>do Centro Universitário de João Pessoa - UNIPE<br><br>João Pessoa<br>2022</center></html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SOBRE", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valorLimiarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_valorLimiarMouseDragged
        // TODO add your handling code here:
        String limiar = Integer.toString(valorLimiar.getValue());
        mostraLimiar.setText(limiar);
    }//GEN-LAST:event_valorLimiarMouseDragged

    private void aplicaBnWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaBnWActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Filtro de Limiarização (P&B)");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File imgSelecionada = chooser.getSelectedFile();
        int limiar = valorLimiar.getValue();
        BufferedImage imagem = null;
        try {
            imagem = ImageIO.read(imgSelecionada);
        } catch (IOException ex) {
            Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int largura = imagem.getWidth();
        int altura = imagem.getHeight();

        BufferedImage filtro = FiltroRGB.escalaBnW(imagem, limiar);
        //exibe original
        ImageIcon icon1 = new ImageIcon(imagem);
        Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        origBnW.setIcon(new ImageIcon(miniatura1));
        //exibe filtro
        ImageIcon icon2 = new ImageIcon(filtro);
        Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        preBnW.setIcon(new ImageIcon(miniatura2));
    }//GEN-LAST:event_aplicaBnWActionPerformed

    private void aplicaNGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaNGTActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Filtro Negativo pelo RGB");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File imgSelecionada = chooser.getSelectedFile();
        BufferedImage imagem = null;
        try {
            imagem = ImageIO.read(imgSelecionada);
        } catch (IOException ex) {
            Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int largura = imagem.getWidth();
        int altura = imagem.getHeight();

        BufferedImage filtro = FiltroRGB.escalaNegativa(imagem);
        //exibe original
        ImageIcon icon1 = new ImageIcon(imagem);
        Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        origNGT.setIcon(new ImageIcon(miniatura1));
        //exibe filtro
        ImageIcon icon2 = new ImageIcon(filtro);
        Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        preNGT.setIcon(new ImageIcon(miniatura2));
    }//GEN-LAST:event_aplicaNGTActionPerformed

    private void jCinzaVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCinzaVerdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCinzaVerdeActionPerformed

    private void jCinzaMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCinzaMediaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCinzaMediaActionPerformed

    private void aplicaECZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaECZActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aplicaECZActionPerformed

    private void aplicaECZMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicaECZMouseClicked
        // TODO add your handling code here:
        if (jCinzaMedia.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Escala de Cinza pela Média RGB");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();

            BufferedImage filtro = FiltroRGB.escalaCinzaMedia(imagem);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origECZ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preECZ.setIcon(new ImageIcon(miniatura2));
        } else if (jCinzaVermelho.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Escala de Cinza pela Banda Vermelha");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();

            BufferedImage filtro = FiltroRGB.escalaCinzaBanda(imagem,'R');
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origECZ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preECZ.setIcon(new ImageIcon(miniatura2));
        } else if (jCinzaVerde.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Escala de Cinza pela Banda Verde");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();

            BufferedImage filtro = FiltroRGB.escalaCinzaBanda(imagem,'G');
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origECZ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preECZ.setIcon(new ImageIcon(miniatura2));
        } else if (jCinzaAzul.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Escala de Cinza pela Banda Azul");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();
            BufferedImage filtro = FiltroRGB.escalaCinzaBanda(imagem,'B');
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origECZ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preECZ.setIcon(new ImageIcon(miniatura2));
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma das opções");
        }
    }//GEN-LAST:event_aplicaECZMouseClicked

    private void aplicaATBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaATBActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Filtro Aumento de Tonalidade por Banda RGB");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File imgSelecionada = chooser.getSelectedFile();
        BufferedImage imagem = null;
        try {
            imagem = ImageIO.read(imgSelecionada);
        } catch (IOException ex) {
            Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int largura = imagem.getWidth();
        int altura = imagem.getHeight();
        int R,G,B;
        R = (Integer) jRed.getValue();
        G = (Integer) jGreen.getValue();
        B = (Integer) jBlue.getValue();

        BufferedImage filtro = FiltroRGB.tonalidadeValorRGB(imagem, R, G, B);
        //exibe original
        ImageIcon icon1 = new ImageIcon(imagem);
        Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        origATB.setIcon(new ImageIcon(miniatura1));
        //exibe filtro
        ImageIcon icon2 = new ImageIcon(filtro);
        Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        preATB.setIcon(new ImageIcon(miniatura2));
    }//GEN-LAST:event_aplicaATBActionPerformed

    private void aplicaBRGBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicaBRGBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aplicaBRGBMouseClicked

    private void aplicaBRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaBRGBActionPerformed
        // TODO add your handling code here:
        if (jBVermelho.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Banda Vermelha");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();

            BufferedImage filtro = FiltroRGB.bandRed(imagem);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBRGB.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBRGB.setIcon(new ImageIcon(miniatura2));
        } else if (jBVerde.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Banda Verde");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();

            BufferedImage filtro = FiltroRGB.bandGreen(imagem);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBRGB.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBRGB.setIcon(new ImageIcon(miniatura2));
        } else if (jBAzul.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Banda Azul");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();
            BufferedImage filtro = FiltroRGB.bandBlue(imagem);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBRGB.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBRGB.setIcon(new ImageIcon(miniatura2));
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma das opções");
        }
    }//GEN-LAST:event_aplicaBRGBActionPerformed

    private void jBVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBVerdeActionPerformed

    private void aplicaBrilhoRGBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicaBrilhoRGBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aplicaBrilhoRGBMouseClicked

    private void aplicaBrilhoRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaBrilhoRGBActionPerformed
        // TODO add your handling code here:
        if (jAddRGB.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Adição de Brilho por RGB");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();
            int valor = (int)(valorAddBrilho.getValue());

            BufferedImage filtro = FiltroRGB.addBilhoRGB(imagem,valor);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBrilhoRGB.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBrilhoRGB.setIcon(new ImageIcon(miniatura2));
        } else if (jMultRGB.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Multiplicação de Brilho por RGB");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            int largura = imagem.getWidth();
            int altura = imagem.getHeight();
            double valor = (double)(valorMultBrilho.getValue());
            
            BufferedImage filtro = FiltroRGB.multBilhoRGB(imagem,valor);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBrilhoRGB.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBrilhoRGB.setIcon(new ImageIcon(miniatura2));
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma das opções");
        }
    }//GEN-LAST:event_aplicaBrilhoRGBActionPerformed

    private void jMultRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMultRGBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMultRGBActionPerformed

    private void aplicaBrilhoYIQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicaBrilhoYIQMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aplicaBrilhoYIQMouseClicked

    private void aplicaBrilhoYIQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaBrilhoYIQActionPerformed
        // TODO add your handling code here:
        if (jAddYIQ.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Adição de Brilho por YIQ");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //int largura = imagem.getWidth();
            //int altura = imagem.getHeight();
            int valor = (int)(valorAddY.getValue());

            BufferedImage filtro = FiltroYIQ.addBilhoYIQ(imagem,valor);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBrilhoYIQ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBrilhoYIQ.setIcon(new ImageIcon(miniatura2));
        } else if (jMultYIQ.isSelected()){
            JOptionPane.showMessageDialog(null, "Filtro Multiplicação de Brilho por YIQ");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File imgSelecionada = chooser.getSelectedFile();
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(imgSelecionada);
            } catch (IOException ex) {
                Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //int largura = imagem.getWidth();
            //int altura = imagem.getHeight();
            double valor = (double)(valorMultY.getValue());
            
            BufferedImage filtro = FiltroYIQ.multBilhoYIQ(imagem,valor);
            //exibe original
            ImageIcon icon1 = new ImageIcon(imagem);
            Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            origBrilhoYIQ.setIcon(new ImageIcon(miniatura1));
            //exibe filtro
            ImageIcon icon2 = new ImageIcon(filtro);
            Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
            preBrilhoYIQ.setIcon(new ImageIcon(miniatura2));
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma das opções");
        }
    }//GEN-LAST:event_aplicaBrilhoYIQActionPerformed

    private void jMultYIQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMultYIQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMultYIQActionPerformed

    private void aplicaNgtYIQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplicaNgtYIQMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aplicaNgtYIQMouseClicked

    private void aplicaNgtYIQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicaNgtYIQActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Filtro Negativo por YIQ");
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File imgSelecionada = chooser.getSelectedFile();
        BufferedImage imagem = null;
        try {
            imagem = ImageIO.read(imgSelecionada);
        } catch (IOException ex) {
            Logger.getLogger(FiltroAppGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //int largura = imagem.getWidth();
        //int altura = imagem.getHeight();
        
        BufferedImage filtro = FiltroYIQ.escalaNgtYIQ(imagem);
        //exibe original
        ImageIcon icon1 = new ImageIcon(imagem);
        Image miniatura1 = icon1.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        origNgtYIQ.setIcon(new ImageIcon(miniatura1));
        //exibe filtro
        ImageIcon icon2 = new ImageIcon(filtro);
        Image miniatura2 = icon2.getImage().getScaledInstance(350, 350, Image.SCALE_SMOOTH);
        preNgtYIQ.setIcon(new ImageIcon(miniatura2));        
    }//GEN-LAST:event_aplicaNgtYIQActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FiltroAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FiltroAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FiltroAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FiltroAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FiltroAppGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aplicaATB;
    private javax.swing.JButton aplicaBRGB;
    private javax.swing.JButton aplicaBnW;
    private javax.swing.JButton aplicaBrilhoRGB;
    private javax.swing.JButton aplicaBrilhoYIQ;
    private javax.swing.JButton aplicaECZ;
    private javax.swing.JButton aplicaNGT;
    private javax.swing.JButton aplicaNgtYIQ;
    private javax.swing.ButtonGroup bandaBotao;
    private javax.swing.ButtonGroup brilhoRGBBotao;
    private javax.swing.ButtonGroup brilhoYIQBotao;
    public static javax.swing.ButtonGroup cinzaBotao;
    private javax.swing.JPanel filtroBANDA;
    private javax.swing.JPanel filtroBRILHORGB;
    private javax.swing.JPanel filtroBRILHOYIQ;
    private javax.swing.JPanel filtroESCCINZA;
    private javax.swing.JPanel filtroLIMIAR;
    private javax.swing.JPanel filtroNEGATIVO;
    private javax.swing.JPanel filtroNGTYIQ;
    private javax.swing.JPanel filtroTON;
    private javax.swing.JRadioButton jAddRGB;
    private javax.swing.JRadioButton jAddYIQ;
    private javax.swing.JRadioButton jBAzul;
    private javax.swing.JRadioButton jBVerde;
    private javax.swing.JRadioButton jBVermelho;
    private javax.swing.JSpinner jBlue;
    private javax.swing.JRadioButton jCinzaAzul;
    private javax.swing.JRadioButton jCinzaMedia;
    private javax.swing.JRadioButton jCinzaVerde;
    private javax.swing.JRadioButton jCinzaVermelho;
    private javax.swing.JSpinner jGreen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jMultRGB;
    private javax.swing.JRadioButton jMultYIQ;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jRed;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jTomAzul;
    private javax.swing.JLabel jTomVerde;
    private javax.swing.JLabel jTomVermelho;
    private javax.swing.JTextField mostraLimiar;
    private javax.swing.JLabel origATB;
    private javax.swing.JLabel origBRGB;
    private javax.swing.JLabel origBnW;
    private javax.swing.JLabel origBrilhoRGB;
    private javax.swing.JLabel origBrilhoYIQ;
    private javax.swing.JLabel origECZ;
    private javax.swing.JLabel origNGT;
    private javax.swing.JLabel origNgtYIQ;
    private javax.swing.JLabel preATB;
    private javax.swing.JLabel preBRGB;
    private javax.swing.JLabel preBnW;
    private javax.swing.JLabel preBrilhoRGB;
    private javax.swing.JLabel preBrilhoYIQ;
    private javax.swing.JLabel preECZ;
    private javax.swing.JLabel preNGT;
    private javax.swing.JLabel preNgtYIQ;
    private javax.swing.JSpinner valorAddBrilho;
    private javax.swing.JSpinner valorAddY;
    private javax.swing.JSlider valorLimiar;
    private javax.swing.JSpinner valorMultBrilho;
    private javax.swing.JSpinner valorMultY;
    // End of variables declaration//GEN-END:variables
}
